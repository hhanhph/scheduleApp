type Query {
  allTodos: [TodoMVC!]!
  Todo(todoId: ID!): TodoMVC
  Appointment(scheduleId: ID!): Schedule
  getSchedules(scheduleDate: String!): [Schedule!]!
}

type Mutation {
  createTodo(description: String!): TodoMVC!
  updateTodo(todoId: ID!, data: UpdateTodoInput!): TodoMVC
  createSchedule(title: String!,scheduleDate: String!): Schedule!
  updateSchedule(scheduleId: ID!, data: UpdateScheduleInput!): Schedule
  deleteSchedule(scheduleId: ID!): Schedule!
}

input UpdateTodoInput {
  description: String
  completed: Boolean
}

input UpdateScheduleInput{
title: String!
}

type TodoMVC @entity {
  todoId: ID! @id
  completed: Boolean! @column
  description: String! @column
}
scalar Date
type Schedule @entity {
scheduleId: ID! @id
title: String! @column,
scheduleDate: String! @column
}
